version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - '3000:3000'
    env_file:
      - .env
    environment:
      - DATABASE_URL=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/pasetech-portfolio
      - NODE_ENV=production
    depends_on:
      - mongodb
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    restart: always
    ports:
      - '27017:27017'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - app-network
    env_file:
      - .env
    command: ['--replSet', 'rs0', '--bind_ip_all', '--port', '27017']
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
  mongodb_config:
